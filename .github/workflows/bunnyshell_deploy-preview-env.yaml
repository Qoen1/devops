name: Bunnyshell - Deploy Preview Environment
on:
  workflow_run:
    workflows:
      - "Bunnyshell - Prepare Preview Environment Configuration"
    types:
      - completed
permissions:
  pull-requests: write
jobs:
  load-artifact-from-reusable:
    name: Load artifact values
    uses: bunnyshell/workflows/.github/workflows/load-artifact.yaml@v2
    with:
      workflow_run_id: ${{ github.event.workflow_run.id }}

  deploy:
    name: Deploy Environment
    needs: load-artifact-from-reusable
    uses: bunnyshell/workflows/.github/workflows/deploy-env.yaml@v2
    concurrency: bns-deploy-${{ needs.load-artifact-from-reusable.outputs.pr-number }}
    if: ${{ github.event.workflow_run.conclusion == 'success' && needs.load-artifact-from-reusable.outputs.skip-deployment == 'false' }}
    with:
      pr-number: ${{ needs.load-artifact-from-reusable.outputs.pr-number }}
      project-id: ${{ vars.BUNNYSHELL_PROJECT_ID }}
      cluster-id: ${{ vars.BUNNYSHELL_CLUSTER_ID }}
      env-name: "Demo PR #${{ needs.load-artifact-from-reusable.outputs.pr-number }}"
      bunnyshell-yaml-contents: "kind: Environment\nname: preview\ntype: primary\nurlHandle: UwU\ncomponents:\n  -\n    kind: Application\n    name: gateway\n    gitRepo: 'https://github.com/Qoen1/devops.git'\n    gitBranch: main\n    gitApplicationPath: gateway\n    dockerCompose:\n      build:\n        context: ./gateway\n        dockerfile: Dockerfile\n      environment:\n        IMAGE_SERVICE_PORT: 'https://imageservice:3002'\n        MESSAGE_SERVICE_PORT: 'https://messageservice:3003'\n        PORT: '3001'\n      hostname: gateway\n      ports:\n        - '3001:3001/tcp'\n    hosts:\n      -\n        hostname: 'gateway-{{ env.base_domain }}'\n        path: /\n        servicePort: 3001\n  -\n    kind: Application\n    name: grafana\n    gitRepo: 'https://github.com/Qoen1/devops.git'\n    gitBranch: main\n    gitApplicationPath: grafana\n    dockerCompose:\n      build:\n        context: ./grafana\n        dockerfile: Dockerfile\n      ports:\n        - '1234:3000/tcp'\n    hosts:\n      -\n        hostname: 'grafana-{{ env.base_domain }}'\n        path: /\n        servicePort: 1234\n  -\n    kind: Application\n    name: imageservice\n    gitRepo: 'https://github.com/Qoen1/devops.git'\n    gitBranch: main\n    gitApplicationPath: imageService\n    dockerCompose:\n      build:\n        context: ./imageService\n        dockerfile: Dockerfile\n      environment:\n        DB_URL: 'mongodb://mongo:27017/imageService'\n        PORT: '3002'\n        RABBIT_URL: 'amqp://rabbitmq:5672'\n      hostname: imageservice\n      ports:\n        - '3002:3002/tcp'\n    hosts:\n      -\n        hostname: 'imageservice-{{ env.base_domain }}'\n        path: /\n        servicePort: 3002\n    dependsOn:\n      - mongo-express\n      - rabbitmq\n  -\n    kind: Application\n    name: messageservice\n    gitRepo: 'https://github.com/Qoen1/devops.git'\n    gitBranch: main\n    gitApplicationPath: messageService\n    dockerCompose:\n      build:\n        context: ./messageService\n        dockerfile: Dockerfile\n      environment:\n        DB_URL: 'mongodb://mongo:27017/messageService'\n        PORT: '3003'\n        RABBIT_URL: 'amqp://rabbitmq:5672'\n      hostname: messageservice\n      ports:\n        - '3003:3003/tcp'\n    hosts:\n      -\n        hostname: 'messageservice-{{ env.base_domain }}'\n        path: /\n        servicePort: 3003\n    dependsOn:\n      - mongo-express\n      - rabbitmq\n  -\n    kind: Database\n    name: mongo-express\n    dockerCompose:\n      hostname: mongo\n      image.js: mongo\n      ports:\n        - '27017:27017/tcp'\n      restart: always\n  -\n    kind: Service\n    name: prometheus\n    dockerCompose:\n      command:\n        - '--web.enable-lifecycle'\n        - '--config.file=/etc/prometheus/prometheus.yml'\n      hostname: prometheus\n      image.js: 'prom/prometheus:latest'\n      ports:\n        - '9090:9090/tcp'\n    hosts:\n      -\n        hostname: 'prometheus-{{ env.base_domain }}'\n        path: /\n        servicePort: 9090\n  -\n    kind: Service\n    name: rabbitmq\n    dockerCompose:\n      hostname: rabbitmq\n      image.js: 'rabbitmq:latest'\n      ports:\n        - '5672:5672/tcp'\n    hosts:\n      -\n        hostname: 'rabbitmq-{{ env.base_domain }}'\n        path: /\n        servicePort: 5672\n"
      comment-on-pr: true
    secrets:
      bunnyshell-access-token: ${{ secrets.BUNNYSHELL_ACCESS_TOKEN }}